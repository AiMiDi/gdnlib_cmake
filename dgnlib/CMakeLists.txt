file(GLOB_RECURSE SRC_LIST "cpl/*.cpp" "cpl/*.c" "dgn/*.cpp" "dgn/*.c")

if (NOT DEFINED CMAKE_DEBUG_POSTFIX)
  set(CMAKE_DEBUG_POSTFIX "_Debug")
endif()

if(UNIX OR CMAKE_HOST_SYSTEM_NAME MATCHES "Linux")
	message ("Current platform: Linux")
	set (CPL_MULTIPROC_STUB 1)
	set (HAVE_ERRNO_H 1)
	set (HAVE_FCNTL_H 1)
	set (HAVE_FLOAT_H 1)
	set (HAVE_LIMITS_H 1)
	set (HAVE_LOCALE_H 1)
	set (HAVE_SNPRINTF 1)
	set (HAVE_STDLIB_H 1)
	set (HAVE_STRINGS_H 1)
	set (HAVE_STRING_H 1)
	set (HAVE_SYS_STAT_H 1)
	set (HAVE_SYS_TYPES_H 1)
	set (HAVE_UNISTD_H 1)
	set (HAVE_VALUES_H 1)
	set (HAVE_VPRINTF 1)
	set (HAVE_VSNPRINTF 1)
	set (SIZEOF_INT 4)
	set (SIZEOF_LONG 4)
	set (inline 1)
	set (CMAKE_INLINK __attribute__((always_inline)))

	configure_file("${CMAKE_CURRENT_SOURCE_DIR}/cpl_config.h.in" "${CMAKE_CURRENT_SOURCE_DIR}/cpl/cpl_config.h" NEWLINE_STYLE UNIX)

elseif(MSVC OR CMAKE_HOST_SYSTEM_NAME MATCHES "Windows")
	message ("Current platform: Windows")
	set (HAVE_VPRINTF 1)
	set (HAVE_VSNPRINTF 1)
	set (HAVE_SNPRINTF 1)
	set (HAVE_COPYSIGN 1)
	set (STDC_HEADERS 1)
	set (HAVE_ASSERT_H 1)
	set (HAVE_FCNTL_H 1)
	set (HAVE_UNISTD_H)
	set (HAVE_STDINT_H)
	set (HAVE_SYS_TYPES_H 1)
	set (HAVE_LOCALE_H 1)
	set (HAVE_FLOAT_H 1)
	set (HAVE_ERRNO_H 1)
	set (HAVE_SEARCH_H 1)
	set (SIZEOF_INT 4)
	set (SIZEOF_LONG 4)
	set (HOST_FILLORDER 1)
	set (HAVE_IEEEFP 1)
	set (inline 1)
	set (CMAKE_INLINK __forceinline)
	set (lfind 1)
	add_compile_options(/wd4786)

	configure_file("${CMAKE_CURRENT_SOURCE_DIR}/cpl_config.h.in" "${CMAKE_CURRENT_SOURCE_DIR}/cpl/cpl_config.h" NEWLINE_STYLE WIN32)

else()
	message ("current platform: unkonw")
	set (CPL_MULTIPROC_STUB 1)
	set (HAVE_ERRNO_H 1)
	set (HAVE_FCNTL_H 1)
	set (HAVE_FLOAT_H 1)
	set (HAVE_LIMITS_H 1)
	set (HAVE_LOCALE_H 1)
	set (HAVE_SNPRINTF 1)
	set (HAVE_STDLIB_H 1)
	set (HAVE_STRINGS_H 1)
	set (HAVE_STRING_H 1)
	set (HAVE_SYS_STAT_H 1)
	set (HAVE_SYS_TYPES_H 1)
	set (HAVE_UNISTD_H 1)
	set (HAVE_VALUES_H 1)
	set (HAVE_VPRINTF 1)
	set (HAVE_VSNPRINTF 1)
	set (SIZEOF_INT 4)
	set (SIZEOF_LONG 4)
	set (inline 1)
	set (CMAKE_INLINK __attribute__((always_inline)))

	configure_file("${CMAKE_CURRENT_SOURCE_DIR}/cpl_config.h.in" "${CMAKE_CURRENT_SOURCE_DIR}/cpl/cpl_config.h")
endif()

if (USE_SHARED_LIB)
   add_library(dgnlib ${SRC_LIST})
   set_target_properties(dgnlib PROPERTIES VERSION ${PROJECT_VERSION} SOVERSION ${PROJECT_VERSION} DEBUG_POSTFIX "${CMAKE_DEBUG_POSTFIX}")
else()
   add_library(dgnlib STATIC ${SRC_LIST})
   set_target_properties(dgnlib PROPERTIES INTERFACE_COMPILE_DEFINITIONS "LIBMMD_STATIC" DEBUG_POSTFIX "${CMAKE_DEBUG_POSTFIX}")
endif()

add_executable (dgndump "dgndump.c")
add_executable (dgnwritetest "dgnwritetest.c")

target_link_libraries(dgndump dgnlib)
target_link_libraries(dgnwritetest dgnlib)

if (CMAKE_VERSION VERSION_GREATER 3.12)
  set_property(TARGET dgndump PROPERTY CXX_STANDARD 20)
  set_property(TARGET dgnwritetest PROPERTY CXX_STANDARD 20)
endif()

target_include_directories(dgnlib PUBLIC "cpl")
target_include_directories(dgnlib PUBLIC "dgn")